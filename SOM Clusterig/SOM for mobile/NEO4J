##-------------------------------------------DB SET UP--------------------------------------------------##

######################CREATE Node######################

###User
LOAD CSV WITH HEADERS FROM "https://raw.githubusercontent.com/chriszhenghaochen/NesTS-Vis/master/user.csv" AS row
CREATE (u:User)
SET u.id =toInt(row.id);

###Station
LOAD CSV WITH HEADERS FROM "https://raw.githubusercontent.com/chriszhenghaochen/NesTS-Vis/master/station.csv" AS row
CREATE (u:Station)
SET u.id =toInt(row.id);

###IP
LOAD CSV WITH HEADERS FROM "https://raw.githubusercontent.com/chriszhenghaochen/NesTS-Vis/master/IP.csv" AS row
CREATE (u:User)
SET u.id =row.id;



######################CREATE Relationship######################

###visits RELATIONSHIP
USING PERIODIC COMMIT
LOAD CSV WITH HEADERS FROM "https://raw.githubusercontent.com/chriszhenghaochen/NesTS-Vis/master/ipf.csv" AS row
MATCH (u:User {id: toInt(row.station)})
MATCH (a:IP {id: row.ip})
CREATE (u)-[k:Visits]->(a)
SET k.frequency =toInt(row.count);

###CREATE uses RELATIONSHIPS
USING PERIODIC COMMIT
LOAD CSV WITH HEADERS FROM "https://raw.githubusercontent.com/chriszhenghaochen/NesTS-Vis/master/statf1.csv" AS row
MATCH (u:User {id: toInt(row.user)})
MATCH (a:Station {id: toInt(row.station)})
CREATE (u)-[k:Visits]->(a)
SET k.frequency =toInt(row.start);



##-----------------------------------------------------DB UTILIZE----------------------------------------------##
###Search User
MATCH q=(n:User)-[]-() where n.id in [] RETURN q

###Search Station
MATCH p=(n:User)-[]-(k:Station), q=(n)-[]-() where k.id in [] RETURN q,p

###Search IP
MATCH p=(n:User)-[]-(i:IP), q=(n)-[]-() where i.id in [] RETURN q,p

